commit_types = {
    "feat": ["add", "implement", "new", "introduce"],
    "fix": ["fix", "resolve", "patch", "address"],
    "docs": ["document", "update docs", "readme"],
    "refactor": ["refactor", "restructure", "simplify"],
    "test": ["test", "coverage", "spec"],
    "style": ["format", "style", "lint"],
    "perf": ["optimize", "performance", "speed"],
    "chore": ["chore", "maintain", "update", "remove"],
    "ci": ["ci", "pipeline", "workflow"],
    "build": ["build", "dependency", "version"],
}

example_commits = {
    "feat": "feat(auth): implement OAuth2 with role-based access",
    "fix": "fix(api): resolve data race in concurrent requests",
    "docs": "docs(api): update authentication documentation",
    "refactor": "refactor(core): simplify error handling logic",
    "chore": "chore(deps): update dependency versions to latest",
    "style": "style(components): format according to style guide",
    "perf": "perf(queries): optimize database index for faster lookups",
    "test": "test(api): add integration tests for payment flow",
}

commit_training_data = {
    "feat": [
        "feat(auth): implement JWT authentication flow",
        "feat(ui): add dark mode toggle with system preference detection",
        "feat(api): implement rate limiting middleware",
        "feat(forms): add client-side form validation",
        "feat(search): implement elasticsearch integration",
        "feat(cache): add Redis caching layer for API responses",
        "feat(auth): implement social login providers",
        "feat(security): add two-factor authentication support",
    ],
    "fix": [
        "fix(auth): resolve token refresh race condition",
        "fix(api): handle concurrent request deadlocks",
        "fix(validation): correct email regex pattern",
        "fix(memory): resolve memory leak in WebSocket connections",
        "fix(security): patch SQL injection vulnerability",
        "fix(cors): resolve cross-origin request issues",
        "fix(cache): handle cache invalidation edge cases",
        "fix(ui): resolve mobile viewport rendering issues",
    ],
    "docs": [
        "docs(api): update REST endpoints documentation",
        "docs(setup): improve installation instructions",
        "docs(auth): document OAuth2 implementation details",
        "docs(deploy): add AWS deployment guide",
        "docs(contributing): update PR guidelines",
        "docs(api): add GraphQL schema documentation",
        "docs(security): document security best practices",
        "docs(testing): update e2e testing guide",
    ],
    "refactor": [
        "refactor(api): split monolithic controller into modules",
        "refactor(db): optimize database query patterns",
        "refactor(auth): separate authentication logic",
        "refactor(middleware): improve error handling flow",
        "refactor(utils): create shared utility functions",
        "refactor(services): implement repository pattern",
        "refactor(validation): centralize validation logic",
        "refactor(config): improve configuration management",
    ],
    "chore": [
        "chore(deps): update package dependencies to latest",
        "chore(ci): update GitHub Actions workflow",
        "chore(docker): optimize container build process",
        "chore(lint): update ESLint configuration",
        "chore(git): update gitignore patterns",
        "chore(deps): remove unused dependencies",
        "chore(scripts): update build scripts",
        "chore(types): update TypeScript definitions",
    ],
    "style": [
        "style(css): align with design system guidelines",
        "style(components): update button styling",
        "style(layout): improve responsive grid system",
        "style(theme): update color palette variables",
        "style(forms): standardize input field styling",
        "style(fonts): update typography system",
        "style(animations): refine transition effects",
        "style(icons): update icon system to SVG",
    ],
    "perf": [
        "perf(images): implement lazy loading strategy",
        "perf(api): add query result caching",
        "perf(db): optimize database indices",
        "perf(bundle): reduce JavaScript bundle size",
        "perf(assets): implement CDN distribution",
        "perf(queries): optimize database join operations",
        "perf(cache): implement LRU caching strategy",
        "perf(api): implement response compression",
    ],
    "test": [
        "test(api): add integration tests for auth flow",
        "test(ui): add unit tests for form validation",
        "test(e2e): add checkout flow tests",
        "test(utils): improve test coverage for helpers",
        "test(auth): add OAuth callback tests",
        "test(api): add load testing scenarios",
        "test(security): add penetration testing suite",
        "test(performance): add benchmark tests",
    ],
}

semantic_patterns = {
    "feat": [
        # New functionality
        ("create", "new"),
        ("add", "feature"),
        ("implement", "new"),
        ("enable", "support"),
        ("introduce", "capability"),
        ("build", "new"),
        ("develop", "feature"),
        ("set up", "new"),
        ("setup", "new"),
        ("establish", "new"),
        ("deploy", "new"),
        # Integration patterns
        ("integrate", "with"),
        ("connect", "to"),
        ("link", "with"),
        ("support", "for"),
        ("enable", "integration"),
        ("add", "support"),
        # User-facing changes
        ("allow", "users"),
        ("provide", "ability"),
        ("enable", "users"),
        ("add", "option"),
        ("implement", "interface"),
        ("create", "endpoint"),
        # System capabilities
        ("extend", "functionality"),
        ("expand", "capabilities"),
        ("enhance", "system"),
        ("upgrade", "functionality"),
        ("initialize", "system"),
        ("bootstrap", "application"),
        # Specific tech additions
        ("implement", "api"),
        ("add", "route"),
        ("create", "middleware"),
        ("setup", "database"),
        ("configure", "service"),
        ("establish", "connection"),
        ("add", "validation"),
        ("implement", "authentication"),
    ],
    "fix": [
        # Error handling
        ("correct", "issue"),
        ("prevent", "error"),
        ("resolve", "bug"),
        ("handle", "case"),
        ("patch", "vulnerability"),
        ("address", "problem"),
        ("solve", "issue"),
        ("eliminate", "error"),
        ("fix", "crash"),
        ("repair", "broken"),
        ("mitigate", "risk"),
        ("catch", "error"),
        # Security fixes
        ("patch", "security"),
        ("fix", "vulnerability"),
        ("secure", "endpoint"),
        ("prevent", "breach"),
        ("protect", "against"),
        ("sanitize", "input"),
        # Edge cases
        ("handle", "edge"),
        ("address", "corner"),
        ("fix", "rare"),
        ("resolve", "special"),
        ("cover", "exceptional"),
        ("manage", "unexpected"),
        # System issues
        ("correct", "behavior"),
        ("fix", "performance"),
        ("resolve", "conflict"),
        ("repair", "connection"),
        ("restore", "functionality"),
        ("fix", "race condition"),
        # Data issues
        ("correct", "data"),
        ("fix", "corruption"),
        ("resolve", "inconsistency"),
        ("repair", "state"),
        ("fix", "synchronization"),
        ("handle", "invalid"),
    ],
    "docs": [
        # Documentation updates
        ("explain", "how"),
        ("clarify", "docs"),
        ("document", "usage"),
        ("update", "readme"),
        ("improve", "documentation"),
        ("describe", "process"),
        ("add", "examples"),
        ("detail", "setup"),
        ("expand", "guide"),
        # API documentation
        ("document", "api"),
        ("describe", "endpoint"),
        ("specify", "parameters"),
        ("explain", "response"),
        ("detail", "authentication"),
        ("clarify", "usage"),
        # Guides and tutorials
        ("add", "tutorial"),
        ("create", "guide"),
        ("write", "documentation"),
        ("provide", "example"),
        ("explain", "workflow"),
        ("document", "steps"),
        # Technical writing
        ("revise", "documentation"),
        ("rewrite", "explanation"),
        ("elaborate", "on"),
        ("clarify", "section"),
        ("update", "guide"),
        ("improve", "clarity"),
        ("enhance", "readability"),
    ],
    "refactor": [
        # Code improvement
        ("improve", "code"),
        ("clean", "up"),
        ("simplify", "logic"),
        ("restructure", "code"),
        ("optimize", "performance"),
        ("enhance", "readability"),
        ("reorganize", "files"),
        # Architecture changes
        ("modernize", "codebase"),
        ("consolidate", "logic"),
        ("streamline", "process"),
        ("decouple", "from"),
        ("extract", "into"),
        ("separate", "concerns"),
        # Code organization
        ("move", "logic"),
        ("split", "into"),
        ("combine", "into"),
        ("organize", "better"),
        ("structure", "properly"),
        # Performance optimization
        ("optimize", "for"),
        ("improve", "efficiency"),
        ("enhance", "performance"),
        ("better", "handling"),
        # Technical debt
        ("reduce", "complexity"),
        ("simplify", "implementation"),
        ("clean", "architecture"),
        ("improve", "structure"),
    ],
    "chore": [
        # Maintenance
        ("remove", "unused"),
        ("delete", "old"),
        ("update", "version"),
        ("clean", "up"),
        ("maintain", "deps"),
        ("bump", "version"),
        # Organization
        ("organize", "files"),
        ("move", "to"),
        ("rename", "files"),
        ("restructure", "folders"),
        ("relocate", "assets"),
        # Dependencies
        ("upgrade", "packages"),
        ("update", "dependencies"),
        ("install", "package"),
        ("migrate", "to"),
        # Configuration
        ("configure", "setting"),
        ("setup", "config"),
        ("update", "environment"),
        ("modify", "setting"),
        # Automation
        ("automate", "process"),
        ("script", "task"),
        ("update", "workflow"),
        ("improve", "pipeline"),
    ],
    "style": [
        # Code style
        ("format", "code"),
        ("align", "with"),
        ("style", "according"),
        ("standardize", "format"),
        ("indent", "properly"),
        ("apply", "prettier"),
        ("enforce", "style"),
        # Consistency
        ("consistent", "formatting"),
        ("follow", "convention"),
        ("maintain", "standard"),
        ("uniform", "style"),
        # Visual changes
        ("adjust", "spacing"),
        ("align", "elements"),
        ("improve", "layout"),
        ("fix", "indentation"),
        # Standards compliance
        ("comply", "with"),
        ("match", "standard"),
        ("follow", "guidelines"),
        ("adhere", "to"),
    ],
    "perf": [
        # Speed optimization
        ("optimize", "speed"),
        ("improve", "performance"),
        ("reduce", "time"),
        ("decrease", "memory"),
        ("enhance", "efficiency"),
        ("speed", "up"),
        # Resource usage
        ("minimize", "load"),
        ("reduce", "usage"),
        ("optimize", "memory"),
        ("improve", "utilization"),
        # Response time
        ("faster", "response"),
        ("reduce", "latency"),
        ("improve", "speed"),
        ("quicken", "process"),
        # System performance
        ("efficient", "handling"),
        ("optimize", "processing"),
        ("improve", "throughput"),
        ("enhance", "capacity"),
        # Caching
        ("cache", "results"),
        ("implement", "caching"),
        ("optimize", "cache"),
        ("improve", "caching"),
    ],
    "test": [
        # Test creation
        ("add", "tests"),
        ("create", "test"),
        ("implement", "testing"),
        ("write", "test"),
        ("develop", "tests"),
        # Coverage
        ("cover", "cases"),
        ("increase", "coverage"),
        ("improve", "coverage"),
        ("extend", "tests"),
        # Validation
        ("ensure", "works"),
        ("verify", "behavior"),
        ("validate", "input"),
        ("check", "output"),
        # Test types
        ("unit", "test"),
        ("integration", "test"),
        ("e2e", "test"),
        ("regression", "test"),
        # Test improvements
        ("enhance", "tests"),
        ("strengthen", "testing"),
        ("improve", "reliability"),
        ("robust", "testing"),
    ],
    "ci": [
        # Pipeline
        ("update", "pipeline"),
        ("modify", "workflow"),
        ("improve", "ci"),
        ("configure", "build"),
        # Automation
        ("automate", "deploy"),
        ("setup", "action"),
        ("configure", "webhook"),
        ("add", "trigger"),
        # Integration
        ("integrate", "with"),
        ("connect", "to"),
        ("setup", "integration"),
        ("enable", "sync"),
        # Deployment
        ("improve", "deploy"),
        ("optimize", "release"),
        ("automate", "publish"),
        ("streamline", "delivery"),
    ],
}
